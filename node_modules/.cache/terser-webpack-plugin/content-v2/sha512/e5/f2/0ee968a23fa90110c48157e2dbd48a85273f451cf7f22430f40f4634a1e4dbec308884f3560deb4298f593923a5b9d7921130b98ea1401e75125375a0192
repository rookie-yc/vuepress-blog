{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{428:function(r,s,e){\"use strict\";e.r(s);var t=e(56),a=Object(t.a)({},(function(){var r=this,s=r.$createElement,e=r._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":r.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"src、href和defer的区别\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#src、href和defer的区别\"}},[r._v(\"#\")]),r._v(\" src、href和defer的区别\")]),r._v(\" \"),e(\"h3\",{attrs:{id:\"src和href都是用来引用外部的资源-它们的区别如下\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#src和href都是用来引用外部的资源-它们的区别如下\"}},[r._v(\"#\")]),r._v(\" src和href都是\"),e(\"strong\",[r._v(\"用来引用外部的资源\")]),r._v(\"，它们的区别如下：\")]),r._v(\" \"),e(\"blockquote\",[e(\"ul\",[e(\"li\",[e(\"strong\",[r._v(\"src\")]),r._v(\": 表示对资源的引用，它指向的内容会嵌入到当前的标签所在的位置。src会将其指向的资源下载并应用到文档内，如请求js脚本。当浏览器解析到该元素，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，所以一般js脚本会放在页面底部。\")]),r._v(\" \"),e(\"li\",[e(\"strong\",[r._v(\"href\")]),r._v(\": 表示对超文本引用，它指向一些网络资源，建立和当前元素或文档的链接关系。当浏览器识别到它指向的文件时，就会并行下载资源，不会停止对当前文档的处理。常用在a、link等标签上。\")])])]),r._v(\" \"),e(\"h3\",{attrs:{id:\"defer和async属性都是去异步加载外部的js脚本文件-它们都不会阻塞页面的解析-其区别如下\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#defer和async属性都是去异步加载外部的js脚本文件-它们都不会阻塞页面的解析-其区别如下\"}},[r._v(\"#\")]),r._v(\" defer和async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析,其区别如下：\")]),r._v(\" \"),e(\"blockquote\",[e(\"ul\",[e(\"li\",[e(\"strong\",[r._v(\"执行顺序\")]),r._v(\"： 多个带async属性的标签，不能保证加载的顺序；多个defer属性的标签，按照加载顺序执行；\")]),r._v(\" \"),e(\"li\",[e(\"strong\",[r._v(\"脚本是否执行：async属性，表示后续文档的加载和执行与js脚本的加载和执行是并行的\")]),r._v(\"，即异步执行；defer属性，加载后续文档的过程和js脚本的加载（此时仅加载不执行）是并行进行的（异步），js脚本需要等到文档所有元素解析完成之后执行，\")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);","extractedComments":[]}